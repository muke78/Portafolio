#!/bin/sh
echo "🔍 Validando mensaje de commit..."

# Expresión regular mejorada:
# tipo(scope opcional): descripción mínima de 10 caracteres
# git commit -m "feat(funcionalidad): "Nueva funcionalidad para el sistema"
commit_regex="^(feat|fix|docs|style|refactor|perf|test|chore|ci|build|revert)(\([a-zA-Z0-9_-]+\))?: ?.{10,}$"
commit_msg=$(cat "$1")

if ! echo "$commit_msg" | grep -Eq "$commit_regex"; then
  echo ""
  echo "❌ Mensaje de commit inválido."
  echo "--------------------------------------------------"
  echo "📌 Formato esperado: 'tipo(scope opcional): descripción de al menos 10 caracteres'"
  echo "🔧 Tipos válidos:"
  echo "   feat     → Nueva funcionalidad"
  echo "   fix      → Corrección de errores"
  echo "   docs     → Cambios en documentación"
  echo "   style    → Formato, estilo, sin afectar código"
  echo "   refactor → Refactorización de código"
  echo "   perf     → Mejora de rendimiento"
  echo "   test     → Agregar o corregir pruebas"
  echo "   chore    → Tareas generales o mantenimiento"
  echo "   ci       → Cambios en configuración CI/CD"
  echo "   build    → Cambios que afectan el build"
  echo "   revert   → Revertir un commit"
  echo ""
  echo "📝 Ejemplos válidos:"
  echo "   feat: Agregar login con Google"
  echo "   fix(auth): Corregir error al refrescar token"
  echo "--------------------------------------------------"
  exit 1
fi

echo "✅ Mensaje válido. ¡Buen trabajo! 🚀"