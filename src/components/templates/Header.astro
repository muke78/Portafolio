---
import { getI18N } from '@/i18n';
// import { Toast } from '@/components/islands/Toast';
import Parabola from '@/components/atomos/Parabola.astro';

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
---

<div class="hero min-h-[80vh] py-8">
  <div class="hero-content text-center">
      <Parabola
      class="top-60 lg:left-[25rem] bg-gradient-to-t from-base-content via-secondary skew-x-[35deg] rotate-[30deg] shadow__skew"
      classNameToBottom="top-60 lg:right-[25rem] bg-gradient-to-t from-base-content via-primary -skew-x-[35deg] rotate-[-30deg] shadow__skew"/>
      <div id="scrolling-element" class="max-w-lg fixed">
      <!-- <Toast currentLocale={currentLocale} client:load /> -->
      
        <h1 class="text-6xl xl:text-8xl lg:text-8x1 md:text-8xl font-bold">
          {i18n.HEADER.HEADER_TITLE}
        </h1>
        <span
        class="text-7xl xl:text-8xl lg:text-8x1 md:text-8xl leading-snug font-bold bg-clip-text text-transparent bg-gradient-to-r from-primary to-accent"
      >
        {i18n.HEADER.HEADER_NAME}
      </span>
      <p class="py-5 text-lg font-medium text-base-content">{i18n.HEADER.HEADER_ABOUT}</p>
      <a
        href="#habilidades"
        class="btn h-10 min-h-14 pl-6 pr-6 font-bold text-sm border-none bg-base-300 z-50"
      >
        <svg 
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="currentColor"
            style="--sl-icon-size: 0.5em;">
          <path 
              fill="none"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
          d="M8.12 9.29L12 13.17l3.88-3.88a.996.996 0 1 1 1.41 1.41l-4.59 4.59a.996.996 0 0 1-1.41 0L6.7 10.7a.996.996 0 0 1 0-1.41c.39-.38 1.03-.39 1.42 0"/>
        </svg>
        {i18n.HEADER.HEADER_BUTTON}
      </a>
    </div>
  </div>
</div>

<style>
  #scrolling-element, #scroll__prbla, #scroll_prbla {
    opacity: 0.6; 
    transition: opacity 0.1s ease-in-out, transform 0.5s ease-in-out;
  }
</style>

<script>
  // Seleccionamos los elementos
  const element = document.getElementById('scrolling-element');
  const prbla1 = document.getElementById('scroll__prbla');
  const prbla2 = document.getElementById('scroll_prbla');

  prbla1.style.opacity = '0.6';
  prbla2.style.opacity = '0.6';
  prbla1.style.transform = 'scale(1) skewX(35deg) rotate(30deg)';
  prbla2.style.transform = 'scale(1) skewX(-35deg) rotate(-30deg)';
  prbla1.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';
  prbla2.style.transition = 'opacity 0.5s ease-in-out, transform 0.5s ease-in-out';

  window.addEventListener('scroll', () => {
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    const maxOpacity = 0.6;
    const minOpacity = 0;
    const fadeStart = 200; 
    const fadeEnd = 600; 

  
    const maxScale = 1;
    const minScale = 0.7;
    const scaleStart = 1; 
    const scaleEnd = 600;   

    // Calcular la opacidad
    const opacity = scrollTop < fadeStart
      ? maxOpacity
      : Math.max(
          maxOpacity - ((scrollTop - fadeStart) / (fadeEnd - fadeStart)) * (maxOpacity - minOpacity),
          minOpacity
        );

    // Calcular la escala
    const scale = scrollTop < scaleStart
      ? maxScale
      : Math.max(
          maxScale - ((scrollTop - scaleStart) / (scaleEnd - scaleStart)) * (maxScale - minScale),
          minScale
        );

    // Aplicar los valores calculados a los elementos
    element.style.opacity = opacity.toString();
    element.style.transform = `scale(${scale})`;

    prbla1.style.opacity = opacity.toString();
    prbla1.style.transform = `scale(${scale}) skewX(35deg) rotate(30deg)`;

    prbla2.style.opacity = opacity.toString();
    prbla2.style.transform = `scale(${scale}) skewX(-35deg) rotate(-30deg)`;
  });
</script>
