---
import { dataColorTheme } from "../../utils/dataColorsTheme.astro";
---

<li>
    <details id="theme-dropdown">
      <summary>
        <svg width="20" height="20" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block h-5 w-5 stroke-current md:h-6 md:w-6">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01"></path>
        </svg>
        Themes
      </summary>
      <ul class="bg-base-100 rounded-md drop-shadow-2xl z-50 h-[28.6rem] overflow-y-auto overflow-x-hidden">
        {dataColorTheme.map(({ colors, name }) => (
          <div class="flex items-center justify-start">
            <button
              class="outline-base-content text-start outline-offset-4"
              data-act-class="[&amp;_svg]:visible"
              data-set-theme={name}
            >
                <span class="flex items-center gap-2 px-4 py-3">
                <span class="flex-grow text-sm">{name}</span>
                <span class="flex h-full shrink-0 flex-wrap p-0.5">
                  {colors.map((color) => (
                    <span
                      class="w-2 h-4 m-0.5 rounded-badge border"
                      style={`background-color: ${color}`}
                    ></span>
                  ))}
                </span>
              </span>
            </button>
          </div>
        ))}
      </ul>
    </details>
  </li>


  <script>
     document.addEventListener('click', (event: MouseEvent) => {
    const dropdown = document.getElementById('theme-dropdown');
    
  
    if (!dropdown.contains(event.target as Node)) {
        dropdown.removeAttribute('open');
    }
    });
  </script>